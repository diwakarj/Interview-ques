#include <iostream>
#include <cstring>


using namespace std;


struct node {

int data;

node *next;

};

bool hasharray[100];


void print(node *head)
{
	while (head)
	{
		cout << head->data << " ";
		head = head->next;
	}

}

node * init(int a[], int n)
{

	node *head, *p;
	head = NULL;
	p = NULL;


	for (int i = 0; i < n; ++i)
	{
		node *nd = new node();
		nd->data = a[i];
		nd->next = NULL;

		if (i == 0)
		{
			head = p = nd;
			continue;
		}

		p->next = nd;
		p = nd;
	}

	return head;
}


node * findkth(node * head, int k)
{
	node *p, *q;

	p = head;
	q = head;

	if (head == NULL)
		return NULL;

	for (int i = 0; i < k - 1; i++)
	{
		if (p->next == NULL)
			return NULL;
		p = p->next;
	}

	if (p == NULL) return NULL;

		 while (p->next != NULL)
		 {
			 p = p->next;
			 q = q->next;
		 }

		 return q;
}


int main()
{
	//cout << "hello world";


	int n = 10;
	int a[] = {
		3, 2, 1, 3, 5, 6, 2, 6, 3, 1
	};

	int k = 1;

	memset(hasharray, false, sizeof(hasharray));

	node * head = init(a, n);

	cout << "the list is " << endl;
	print(head);

	cout << "find the"<<k <<"th element : " << endl;
	    
	node * ele = findkth(head, k);
	if (ele != NULL)
		cout << ele->data << endl;
	else
		cout << "***********error********";
	getchar();
	return 0;

}




